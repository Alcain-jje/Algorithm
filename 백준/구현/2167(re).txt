#동적 계획법 풀이 (시간단축)
N, M = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(N)]

# 부분의 개수 입력
K = int(input())
dp = [[0] * (M+1) for _ in range(N+1)]

for i in range(1, N+1):
    for j in range(1, M+1):
        dp[i][j] = arr[i-1][j-1] + dp[i][j-1] + dp[i-1][j] - dp[i-1][j-1]
for _ in range(K):
    i, j, x, y = map(int, input().split())
    print(dp[x][y] - dp[x][j-1] - dp[i-1][y] + dp[i-1][j-1])



#반복문 구현
a,b=map(int,input().split())
li=[]
for i in range(a):
    li.append(list(map(int,input().split())))

num=int(input())
for k in range(num):
    i, j, x, y= map(int,input().split())
    count = 0
    for a in range(i-1,x):
        for b in range(j-1,y):
            count+=li[a][b]
    print(count)