# 내 풀이
import itertools
import sys
input=sys.stdin.readline
a,b=map(int,input().split())
li=list(map(int,input().split()))
ans=0
for i in range(1,a+1):
    for j in itertools.combinations(li,i): # 조합을 활용하여 가능한 경우의 수 모두 찾기
        if sum(j) == b:
            ans+=1
print(ans)



# 다른 풀이 (재귀함수)
import sys
input=sys.stdin.readline
a,b=map(int,input().split())
li=list(map(int,input().split()))

cnt=0
def sol(num,sub_sum):
    global cnt
    if num >= a:
        return cnt

    sub_sum+=li[num]
    if sub_sum == b:
        cnt+=1

    sol(num+1,sub_sum) # 해당 원소 포함
    sol(num+1,sub_sum-li[num]) #해당 원소 포함 X

sol(0,0)
print(cnt)


# DFS를 활용한 풀이

import sys
input=sys.stdin.readline
a,b=map(int,input().split())
li=list(map(int,input().split()))
result=0

def dfs(i,li,total):
    global result
    if total == b:
        result+=1
    for j in range(i+1,a):
        dfs(j,li,total+li[j])

for i in range(a):
    dfs(i,li,li[i])
print(result)
