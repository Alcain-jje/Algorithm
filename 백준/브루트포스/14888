# re 1번 풀이
import sys
input = sys.stdin.readline

N=int(input())
nums=list(map(int,input().split()))
a,b,c,d=map(int,input().split())
max_ans,min_ans= -sys.maxsize-1,sys.maxsize

def solution(num,idx,add,sub,mul,div):
    global max_ans,min_ans
    if idx == N:
        max_ans=max(max_ans,num)
        min_ans=min(min_ans,num)
        return
    if add >0:
        solution(num+nums[idx],idx+1,add-1,sub,mul,div)
    if sub >0:
        solution(num-nums[idx],idx+1,add,sub-1,mul,div)
    if mul >0:
        solution(num*nums[idx],idx+1,add,sub,mul-1,div)
    if div >0:
        solution(int(num/nums[idx]),idx+1,add,sub,mul,div-1)

solution(nums[0],1,a,b,c,d)
print(max_ans)
print(min_ans)


# 2번 풀이
n = int(input())
number = list(map(int, input().split()))
op = list(map(int, input().split()))
minR = int(1e9)
maxR = -int(1e9)

answer = number[0]

def dfs(idx):
    global answer
    global minR, maxR

    if idx == n:
        if answer > maxR:
            maxR = answer
        if answer < minR:
            minR = answer
        return

    for i in range(4):
        tmp = answer
        if op[i] > 0:
            if i == 0:
                answer += number[idx]
            elif i == 1:
                answer -= number[idx]
            elif i == 2:
                answer *= number[idx]
            else:
                answer= int(answer/number[idx])

            print(op)

            op[i] -= 1
            dfs(idx+1)
            answer = tmp
            op[i] += 1

dfs(1)
print(maxR)
print(minR)
